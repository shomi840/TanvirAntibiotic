install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
install.packages("writexl")
shape(data1)
print(data1)
# Table 1. Demographic characteristics of study participants
data1 |>
select(1:8) |>
tbl_summary(
statistic = list(
all_continuous() ~ "{mean}±{sd}"
)
) |>
as_gt() |>
gtsave("tables/Table1.docx")
# Install the necessary packages (if not already installed)
if (!require(tidyverse)) install.packages("tidyverse", dependencies = TRUE)
if (!require(naniar)) install.packages("naniar", dependencies = TRUE)
if (!require(gtsummary)) install.packages("gtsummary", dependencies = TRUE)
if (!require(glue)) install.packages("glue", dependencies = TRUE)
if (!require(readxl)) install.packages("readxl", dependencies = TRUE)
if (!require(writexl)) install.packages("writexl", dependencies = TRUE)
if (!require(tseries)) install.packages("tseries", dependencies = TRUE)
if (!require(forecast)) install.packages("forecast", dependencies = TRUE)
if (!require(gt)) install.packages("gt", dependencies = TRUE)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
library(gtsummary)
library(glue)
library(readxl)
# Install the necessary package
install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
library(tseries)
library(ggplot2)
library(forecast)
# Read the Excel file
data1 <- readxl::read_excel("C://Users//ASUS//Desktop//New folder//TanvirAntibiotic.git/r/Raw DataAMR_KAP_No_Code.xlsx", skip=1)
# Table 1. Demographic characteristics of study participants
data1 |>
select(1:8) |>
tbl_summary(
statistic = list(
all_continuous() ~ "{mean}±{sd}"
)
) |>
as_gt() |>
gtsave("tables/Table1.docx")
# Install the necessary packages (if not already installed)
if (!require(tidyverse)) install.packages("tidyverse", dependencies = TRUE)
if (!require(naniar)) install.packages("naniar", dependencies = TRUE)
if (!require(gtsummary)) install.packages("gtsummary", dependencies = TRUE)
if (!require(glue)) install.packages("glue", dependencies = TRUE)
if (!require(readxl)) install.packages("readxl", dependencies = TRUE)
if (!require(writexl)) install.packages("writexl", dependencies = TRUE)
if (!require(tseries)) install.packages("tseries", dependencies = TRUE)
if (!require(forecast)) install.packages("forecast", dependencies = TRUE)
if (!require(gt)) install.packages("gt", dependencies = TRUE)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
library(gtsummary)
library(glue)
library(readxl)
library(forecast)
library(gt)
# Read the Excel file
data1 <- readxl::read_excel("AMR_KAP_No_Code.xlsx", skip = 1)
# View the data structure (optional)
str(data1)
summary(data1)
# Table 1: Demographic characteristics of study participants
data1 %>%
select(1:8) %>%  # Select the first 8 columns
tbl_summary(
statistic = list(
all_continuous() ~ "{mean}±{sd}"  # Format continuous variables
)
) %>%
as_gt() %>%  # Convert the table to a gt object for saving
gtsave("Table1.docx")  # Save the table as a Word document
# Install the necessary packages (if not already installed)
if (!require(tidyverse)) install.packages("tidyverse", dependencies = TRUE)
if (!require(naniar)) install.packages("naniar", dependencies = TRUE)
if (!require(gtsummary)) install.packages("gtsummary", dependencies = TRUE)
if (!require(glue)) install.packages("glue", dependencies = TRUE)
if (!require(readxl)) install.packages("readxl", dependencies = TRUE)
if (!require(writexl)) install.packages("writexl", dependencies = TRUE)
if (!require(tseries)) install.packages("tseries", dependencies = TRUE)
if (!require(forecast)) install.packages("forecast", dependencies = TRUE)
if (!require(gt)) install.packages("gt", dependencies = TRUE)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install the necessary package
install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
library(forecast)
# Read the Excel file
data1 <- readxl::read_excel("C://Users//ASUS//Desktop//New folder//TanvirAntibiotic.git/r/Raw DataAMR_KAP_No_Code.xlsx", skip=1)
summary(data1)
# Table 1. Demographic characteristics of study participants
data1 |>
select(1:8) |>
tbl_summary(
statistic = list(
all_continuous() ~ "{mean}±{sd}"
)
) |>
as_gt() |>
gtsave("tables/Table1.docx")
# Install the necessary packages (if not already installed)
if (!require(tidyverse)) install.packages("tidyverse", dependencies = TRUE)
if (!require(naniar)) install.packages("naniar", dependencies = TRUE)
if (!require(gtsummary)) install.packages("gtsummary", dependencies = TRUE)
if (!require(glue)) install.packages("glue", dependencies = TRUE)
if (!require(readxl)) install.packages("readxl", dependencies = TRUE)
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
AMR_KAP_No_Code <- read_excel("Raw Data/AMR_KAP_No_Code.xlsx")
View(AMR_KAP_No_Code)
# Install the necessary package
install.packages("tidyverse")
# Install the necessary package
install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
# Read the Excel file
data1 <- readxl::read_excel("C://Users//ASUS//Desktop//New folder//TanvirAntibiotic.git/r/Raw DataAMR_KAP_No_Code.xlsx", skip=1)
library(readxl)
AMR_KAP_No_Code <- read_excel("Raw Data/AMR_KAP_No_Code.xlsx")
View(AMR_KAP_No_Code)
# View the data (optional, only works in RStudio)
View(data1)
shape(data1)
# Install the necessary package
install.packages("tidyverse")
# Install the necessary package
install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
print(AMR_KAP_No_Code)
summary(AMR_KAP_No_Code)
# Table 1. Demographic characteristics of study participants
AMR_KAP_No_Code |>
select(1:8) |>
tbl_summary(
statistic = list(
all_continuous() ~ "{mean}±{sd}"
)
) |>
as_gt() |>
gtsave("tables/Table1.docx")
# Install the necessary package
install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
library(ggplot2)
library(forecast)
AMR_KAP_No_Code <- read_excel("Raw Data/AMR_KAP_No_Code.xlsx")
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
install.packages("writexl")
install.packages("tseries")
install.packages("ggplot2")
install.packages("forecast")
print(AMR_KAP_No_Code)
summary(AMR_KAP_No_Code)
# Table 1. Demographic characteristics of study participants
AMR_KAP_No_Code |>
select(1:8) |>
tbl_summary(
statistic = list(
all_continuous() ~ "{mean}±{sd}"
)
) |>
as_gt() |>
gtsave("tables/Table1.docx")
tab_1 <-
gtcars |>
dplyr::select(model, year, hp, trq) |>
dplyr::slice(1:5) |>
gt(rowname_col = "model") |>
tab_stubhead(label = "car")
# Define the start and end dates for the data range
start_date <- "2010-06-07"
end_date <- "2010-06-14"
# Create a gt table based on preprocessed
# `sp500` table data
sp500 |>
dplyr::filter(date >= start_date & date <= end_date) |>
dplyr::select(-adj_close) |>
gt() |>
tab_header(
title = "S&P 500",
subtitle = glue::glue("{start_date} to {end_date}")
) |>
fmt_currency() |>
fmt_date(columns = date, date_style = "wd_m_day_year") |>
fmt_number(columns = volume, suffixing = TRUE)
# Install the necessary package
install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
install.packages("tseries")
install.packages("ggplot2")
install.packages("forecast")
# Load necessary libraries
library(readxl)
library(tseries)
library(ggplot2)
library(forecast)
library(dplyr)
AMR_KAP_No_Code <- read_excel("Raw Data/AMR_KAP_No_Code.xlsx")
View(AMR_KAP_No_Code)
# check missing data
sum(is.na(AMR_KAP_No_Code))
miss_var_summary(AMR_KAP_No_Code)
tab_1 <-
gtcars |>
dplyr::select(model, year, hp, trq) |>
dplyr::slice(1:5) |>
gt(rowname_col = "model") |>
tab_stubhead(label = "car")
library(gt)
# Define the start and end dates for the data range
start_date <- "2010-06-07"
end_date <- "2010-06-14"
# Create a gt table based on preprocessed
# `sp500` table data
sp500 |>
dplyr::filter(date >= start_date & date <= end_date) |>
dplyr::select(-adj_close) |>
gt() |>
tab_header(
title = "S&P 500",
subtitle = glue::glue("{start_date} to {end_date}")
) |>
fmt_currency() |>
fmt_date(columns = date, date_style = "wd_m_day_year") |>
fmt_number(columns = volume, suffixing = TRUE)
# Install the necessary package
install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
library(gt)
# Define the start and end dates for the data range
start_date <- "2010-06-07"
end_date <- "2010-06-14"
# Create a gt table based on preprocessed
# `sp500` table data
sp500 |>
dplyr::filter(date >= start_date & date <= end_date) |>
dplyr::select(-adj_close) |>
gt() |>
tab_header(
title = "S&P 500",
subtitle = glue::glue("{start_date} to {end_date}")
) |>
fmt_currency() |>
fmt_date(columns = date, date_style = "wd_m_day_year") |>
fmt_number(columns = volume, suffixing = TRUE)
# Install necessary packages (run only if not already installed)
install.packages(c("tidyverse", "naniar", "gtsummary", "gt", "glue", "readxl", "writexl", "tseries", "forecast"))
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
library(gtsummary)
library(gt)
library(glue)
library(readxl)
library(forecast)
# Read the Excel file (replace with your file path)
AMR_KAP_No_Code <- read_excel("Raw Data/AMR_KAP_No_Code.xlsx")
# View the data (optional, only works in RStudio)
View(AMR_KAP_No_Code)
# Check for missing data and visualize
cat("Number of missing values:", sum(is.na(AMR_KAP_No_Code)), "\n")
miss_var_summary(AMR_KAP_No_Code)
gg_miss_var(AMR_KAP_No_Code) + ggtitle("Missing Data per Variable")
# Check for duplicated rows
cat("Number of duplicated rows:", sum(duplicated(AMR_KAP_No_Code)), "\n")
# Summary statistics of the data
summary(AMR_KAP_No_Code)
# Table 1: Demographic characteristics of study participants
AMR_KAP_No_Code %>%
select(1:8) %>%
tbl_summary(statistic = list(all_continuous() ~ "{mean}±{sd}")) %>%
as_gt() %>%
gtsave("tables/Table1.docx")
gg_miss_var(data)
# check duplicated rows
sum(duplicated(data))
# rename variables
data <- data |>
rename(QOL_Score = Total_SF_Score)
# physical health summary grouping
data <- data |>
mutate(Physical_Health_Status = case_when(
Physical_Health_Summary < 50 ~ 0, # Poor
Physical_Health_Summary >= 50 ~ 1 # Good
))
# mental health summary grouping
data <- data |>
mutate(Mental_Health_Status = case_when(
Mental_Health_Summary < 50 ~ 0, # Poor
Mental_Health_Summary >= 50 ~ 1 # Good
))
# QOL summary grouping
data <- data |>
mutate(QOL_Status = case_when(
QOL_Score < 50 ~ 0, # Poor
QOL_Score >= 50 ~ 1 # Good
))
# export pre-processed data
# as csv
write.csv(data, "data/Thalassemia_QoL_Processed.csv", row.names = F)
# save as RDS (for large)
write_rds(data, "data/Thalassemia_QoL_Processed.rds")
# import exported data
data2 <- read.csv("data/Thalassemia_QoL_Processed.csv")
data3 <- readRDS("data/Thalassemia_QoL_Processed.rds")
# Install the necessary package
install.packages("tidyverse")
install.packages("naniar")
library(tidyverse)
library(gtsummary)
library(easystats)
library(gt)
install.packages("glue")
library(glue)
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
library(naniar)
# Install the necessary package
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(tseries)
# Install required packages
install.packages("readxl")
library(forecast)
library(dplyr)
AMR_KAP_No_Code <- read_excel("Raw Data/AMR_KAP_No_Code.xlsx")
View(AMR_KAP_No_Code)
